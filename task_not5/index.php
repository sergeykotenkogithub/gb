<?php

// Задание 1

/*
Объявить две целочисленные переменные $a и $b и задать им произвольные начальные значения.
Затем написать скрипт, который работает по следующему принципу:
если $a и $b положительные, вывести их разность;
если $а и $b отрицательные, вывести их произведение;
если $а и $b разных знаков, вывести их сумму;
Ноль можно считать положительным числом.
*/

/*
$a = 5;
$b = 12;

function task1($a, $b) {
    if($a >= 0 && $b >= 0 ) {
        echo "{$a} и {$b} положительные а их разность равна:" . ($a - $b);
    }

    else if($a < 0 && $b < 0) {
        echo "{$a} и {$b} положительные а их произведение равны:" . ($a * $b);
    }
    else {
        echo "{$a} и {$b} положительные а их произведение сумма:" . ($a + $b);
    }
}

task1($a, $b);
*/

// ...................................................................

// 2 Задание:

/*
 Присвоить переменной $а значение в промежутке [0..15].
 С помощью оператора switch организовать вывод чисел от $a до 15.
 При желании сделайте это задание через рекурсию.
*/

$a = rand(0,15);

// PS. Можно ещё вместо цифр $a++

/*
switch ($a) {
    case 0:
        echo "0 ";
    case 1:
        echo "1 ";
    case 2:
        echo "2 ";
    case 3:
        echo "3 ";
    case 4:
        echo "4 ";
    case 5:
        echo "5 ";
    case 6:
        echo "6 ";
    case 7:
        echo "7 ";
    case 8:
        echo "8 ";
    case 9:
        echo "9 ";
    case 10:
        echo "10 ";
    case 11:
        echo "10 ";
    case 12:
        echo "12 ";
    case 13:
        echo "13 ";
    case 14:
        echo "14 ";
    case 15:
        echo "15 ";;
}
*/

// Через рекурсию:

/*
function foo($n) {
    echo $n++;
    if($n <= 15) {
        echo " ";
        foo($n);
    }
}

foo($a);
*/

// .........................................................................

// 3 Задание:

/*
Реализовать основные 4 арифметические операции в виде функций с двумя параметрами.
Обязательно использовать оператор return.
В делении проверьте деление на 0 и верните текст ошибки.
*/

/*
function sum($a, $b) {
    return $a + $b;
}
function multiply($a, $b) {
    return $a * $b;
}
function subtract ($a, $b) {
    return $a - $b;
}
function divide ($a, $b) {
    if($a == 0 || $b == 0 ) {
        echo "Ошибка: Значение не должно равно 0";
    }
    else {
        return $a / $b;
    }
}
*/

// .........................................................................

// 4 Задание:

/*
Реализовать функцию с тремя параметрами: function mathOperation($arg1, $arg2, $operation), где $arg1, $arg2 – значения аргументов, $operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 3) и вернуть полученное значение (использовать switch).
*/

// PS: Ещё один case ("деление" && ($arg1 == 0 || $arg2 == 0 )) Чтобы в конце вывода не было: Результат деления

/*
function mathOperation($arg1, $arg2, $operation) {
    switch ($operation) {
        case "прибавить":
          echo "Результат суммы:" . sum($arg1,$arg2);
          break;
        case "умножить":
          echo "Результат умножения:" . multiply($arg1,$arg2);
          break;
        case ("деление" && ($arg1 == 0 || $arg2 == 0 )):
            echo divide($arg1,$arg2);
         break;
        case "деление";
            echo "Результат деления:" . divide($arg1,$arg2);
            break;
        case "вычесть":
         echo "Результат вычетания:" . subtract($arg1,$arg2);
         break;
        default:
            echo "Введите операцию: прибавить, умножить, деления, вычетания";
    }
}

mathOperation(2,0, "деление");
mathOperation(3,1, "умножить");
*/

// .....................................................................

// Задание 6

/*
6. *С помощью рекурсии организовать функцию возведения числа в степень.
Формат: function power($val, $pow), где $val – заданное число, $pow – степень.
*/

/*
function power($val,$pow) {

	if ($pow == 0) {
		return 1;
	}
	return $val * power ($val, $pow - 1);
}

echo power(9, 4);
*/

// .....................................................................

//Задание 7

/*
*Написать функцию, которая вычисляет текущее время и возвращает его в формате с правильными склонениями, например:
22 часа 15 минут
21 час 43 минуты
*/

// PS Всё работает, но так и не понял как записать с ($d % 10 >= 5) && ($d % 10 <= 9 ).

/*

function times($c, $d) {
    $hour = null;
    $minut = null;

    switch ($c) {
        case ( ($c >= 5) && ($c <= 20) ):
            $hour = "часов";
            break;
        case (2 || 3 || 4 || 22 || 23 || 24):
            $hour = "часа";
            break;
    }

    switch ($c % 10) {
        case (1):
            $hour = "час";
    }

//   ..... МИНУТЫ.......

    switch ($d % 10) {

        case (0):
            $minut = "минут";
            break;
        case ( 1 ):
            $minut = "минута";
            break;
        case ( 2 || 3 || 4 ):
            $minut = "минуты";
            break;

//        case ( ($d % 10 >= 5) && ($d % 10 <= 9 ) ):
//            $minut = "минут";
//            break;
    }

    switch ($d) {
         case (($d >= 11) && ($d <= 14)):
             $minut = "минут";
             break;
        case ( ($d >= 5) && ($d <= 19) ):
            $minut = "минут";
            break;
        case ( ($d >= 25) && ($d <= 29) ):
            $minut = "минут";
            break;
        case ( ($d >= 35) && ($d <= 39) ):
            $minut = "минут";
            break;
        case ( ($d >= 45) && ($d <= 59) ):
            $minut = "минут";
            break;
    }


    echo "Время: $c $hour $d $minut";
}

times(24, 9);

*/
